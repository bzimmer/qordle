{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Beat your friends &amp; family at wordle!</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>$ brew install bzimmer/tap/qordle\n</code></pre>"},{"location":"#examples","title":"Examples","text":"Suggest words using the elimination strategy after the first guess of 'brain'<pre><code>$ qordle suggest -s el brAin\n</code></pre> Auto-play with frequency, position, and bigrams strategies for 'ledge'<pre><code>$ qordle play -s f -s p -s bi ledge | jq \".rounds | last\"\n{\n\"dictionary\": 1,\n  \"scores\": [\n\"rat.es\",\n    \"moniE\",\n    \"LEDGE\"\n],\n  \"words\": [\n\"rates\",\n    \"monie\",\n    \"ledge\"\n],\n  \"success\": true\n}\n</code></pre>"},{"location":"commands/","title":"Commands","text":""},{"location":"commands/#input-patterns","title":"Input Patterns","text":"<p>Many of the commands take an input pattern as feedback from guessing a word.</p> <ul> <li>Miss      \u2192 a lower case letter (eg \"local\")</li> <li>Misplaced \u2192 a lower case letter proceeded by a '.' (eg \"l.ocal\")</li> <li>Exact     \u2192 an upper case letter (eg \"LOcal\")</li> </ul>"},{"location":"commands/#global-flags","title":"Global Flags","text":"Name Aliases EnvVars Description debug enable debug log level monochrome disable color output help h show help"},{"location":"commands/#commands_1","title":"Commands","text":"<ul> <li>bee</li> <li>bee today</li> <li>digits</li> <li>help</li> <li>letterboxed</li> <li>order</li> <li>play</li> <li>ranks</li> <li>score</li> <li>strategies</li> <li>suggest</li> <li>validate</li> <li>version</li> <li>wordlists</li> </ul>"},{"location":"commands/#bee","title":"bee","text":"<p>Description</p> <p>Download the NYT spelling bee</p>"},{"location":"commands/#bee-today","title":"bee today","text":"<p>Description</p> <p>Syntax</p> <pre><code>$ qordle bee today [flags]\n</code></pre>"},{"location":"commands/#digits","title":"digits","text":"<p>Description</p> <p>Play digits automatically</p> <p>Syntax</p> <pre><code>$ qordle digits [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description target t count N equation e"},{"location":"commands/#help","title":"help","text":"<p>Description</p> <p>Shows a list of commands or help for one command</p> <p>Syntax</p> <pre><code>$ qordle help [flags] [command]\n</code></pre>"},{"location":"commands/#letterboxed","title":"letterboxed","text":"<p>Description</p> <p>Solve the NYT Letter Boxed puzzle</p> <p>Syntax</p> <pre><code>$ qordle letterboxed [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description min minimum word size max maximum solution length concurrent number of cpus to use for concurrent solving wordlist w use the specified embedded word list"},{"location":"commands/#order","title":"order","text":"<p>Description</p> <p>Order the arguments per the strategy</p> <p>Syntax</p> <pre><code>$ qordle order [flags] word [, word, ...]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description strategy s use the specified strategy speculate S speculate if necessary"},{"location":"commands/#play","title":"play","text":"<p>Description</p> <p>Play wordle automatically</p> <p>Syntax</p> <pre><code>$ qordle play [flags]\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description start t progress B display a progress bar rounds r max rounds not to exceed <code>rounds</code> * len(secret) wordlist w use the specified embedded word list strategy s use the specified strategy speculate S speculate if necessary"},{"location":"commands/#ranks","title":"ranks","text":"<p>Description</p> <p>Detailed rank information from letter frequency tables</p> <p>Syntax</p> <pre><code>$ qordle ranks [flags] &lt;word&gt; ...\n</code></pre> <p>Example</p> <p>Sum all the percentages for letters in position 2</p> <pre><code>$ qordle ranks | jq '.positions | flatten | map(.\"2\") | add'\n1\n</code></pre> <p>Compute the score for the words</p> <pre><code>$ qordle ranks brown | jq .words\n{\n\"brown\": {\n\"bigrams\": {\n\"ranks\": {\n\"br\": 0.0022,\n            \"ow\": 0.0014,\n            \"ro\": 0.0112,\n            \"wn\": 0.0002\n        },\n        \"total\": 0.0750\n        },\n        \"frequencies\": {\n\"ranks\": {\n\"0\": 0.0183,\n            \"1\": 0.0704,\n            \"2\": 0.072,\n            \"3\": 0.0065,\n            \"4\": 0.0718\n        },\n        \"total\": 0.2390\n        },\n        \"positions\": {\n\"ranks\": {\n\"0\": 0.07,\n            \"1\": 0.0685,\n            \"2\": 0.0637,\n            \"3\": 0.0133,\n            \"4\": 0.0581\n        },\n        \"total\": 0.2736\n        }\n}\n}\n</code></pre>"},{"location":"commands/#score","title":"score","text":"<p>Description</p> <p>Score the guesses against the secret</p> <p>Syntax</p> <pre><code>$ qordle score [flags] &lt;secret&gt; &lt;guess&gt; [, &lt;guess&gt;]\n</code></pre>"},{"location":"commands/#strategies","title":"strategies","text":"<p>Description</p> <p>List all available strategies</p> <p>Syntax</p> <pre><code>$ qordle strategies [flags]\n</code></pre>"},{"location":"commands/#suggest","title":"suggest","text":"<p>Description</p> <p>Suggest the next word to guess incorporating the already scored patterns</p> <p>Syntax</p> <pre><code>$ qordle suggest [flags] &lt;pattern&gt;...\n</code></pre> <p>Flags</p> Name Aliases EnvVars Description length word length wordlist w use the specified embedded word list strategy s use the specified strategy speculate S speculate if necessary <p>Example</p> <p>This command uses the specified strategies and any information about prior guesses to sort the remaining words.</p> <pre><code>$ qordle suggest -s freq -s pos -S .rais.e to.nER | jq\n[\n\"neper\",\n  \"nuder\",\n  \"never\",\n  \"ender\",\n  \"under\",\n  \"newer\"\n]\n</code></pre> <pre><code>$ qordle suggest -s bigram .rais.e to.nER | jq\n[\n\"neper\",\n  \"nuder\",\n  \"never\",\n  \"ender\",\n  \"under\",\n  \"newer\"\n]\n</code></pre>"},{"location":"commands/#validate","title":"validate","text":"<p>Description</p> <p>Validate the word against the pattern</p> <p>Syntax</p> <pre><code>$ qordle validate [flags] &lt;guess&gt; &lt;secret&gt;...\n</code></pre> <p>Example</p> <p>This command is useful for understanding why a guess was rejected against the secret. The <code>--debug</code> flag is your friend as it will show the first reason for a word to be rejected.</p> <pre><code>$ qordle --debug validate brown local\n2023-04-10T08:01:42+02:00 DBG compile pattern=[^loca][^loca][^loca][^loca][^loca] required={}\n2023-04-10T08:01:42+02:00 DBG filter found=o i=2 reason=invalid word=brown\n{\n\"guess\": \"brown\",\n    \"ok\": false,\n    \"secrets\": [\n\"local\"\n]\n}\n</code></pre>"},{"location":"commands/#version","title":"version","text":"<p>Description</p> <p>Show the version information of the binary</p> <p>Syntax</p> <pre><code>$ qordle version [flags]\n</code></pre>"},{"location":"commands/#wordlists","title":"wordlists","text":"<p>Description</p> <p>List all available wordlists</p> <p>Syntax</p> <pre><code>$ qordle wordlists [flags]\n</code></pre> <p>Example</p> List all available wordlists<pre><code>$ qordle wordlists | jq\n[\n\"possible\",\n  \"qordle\",\n  \"solutions\"\n]\n</code></pre>"},{"location":"strategies/","title":"Strategies","text":""},{"location":"strategies/#strategies","title":"Strategies","text":"<p><code>qordle</code> supports a number of different word selection strategies as documented below. The strategies are designed to be composable via chaining.</p>"},{"location":"strategies/#alpha","title":"alpha","text":"<p>The alpha strategy sorts the word list alphabetically</p>"},{"location":"strategies/#bigram","title":"bigram","text":"<p>The bigram strategy sums the bigrams for each wordin using the bigram frequency table and sorts the word list highest to lowest</p>"},{"location":"strategies/#elimination","title":"elimination","text":"<p>Note: This strategy is far slower than the rest so best used when the word list has been filtered.</p> <p>The elimination strategy uses each word in the word list as a secret and scores all the remaining words against it. The accumulated sum for the letter &amp; position from position frequency table is used for sorting.</p> <ul> <li>the table value for a Misplaced position</li> <li>two times the table value for an Exact position</li> </ul>"},{"location":"strategies/#frequency","title":"frequency","text":"<p>The frequency strategy iterates the word list accumulating the letter frequency for all remaining words in the list. Each word is then scored by summing its letter frequencies.</p>"},{"location":"strategies/#position","title":"position","text":"<p>The position strategy, similar to the frequency strategy, iterates the word list accumulating the position frequency for each letter. Each word is then scored by summing its letter position.</p>"},{"location":"strategies/#speculation","title":"speculation","text":"<p>The speculation strategy is used for solving \"guessing games\", those situation when all remaining words differ by only a single letter. The strategy iterates the word list accumulating the differing letter and then generates a word list from those words composed of the unknown letters.</p>"},{"location":"strategies/#chaining","title":"Chaining","text":"<p>All strategies are composable via chaining. The chaining, itself a strategy, executes all child strategies and sorts by accumulating the word rank in resulting word list.</p>"},{"location":"strategies/#performance","title":"Performance","text":"<p>The following table shows the number of winning rounds from 2000 randomly chosen words using different strategies.</p> strategy winners total pct speculate{chain{frequency,position}} 1870 2000 93.5 speculate{chain{frequency,elimination}} 1860 2000 93.0 speculate{chain{frequency,position,bigram,elimination}} 1858 2000 92.9 speculate{chain{frequency,position,bigram}} 1858 2000 92.9 speculate{chain{frequency,elimination,bigram}} 1851 2000 92.5 speculate{chain{frequency,bigram}} 1846 2000 92.3 speculate{elimination} 1839 2000 92.0 speculate{frequency} 1834 2000 91.7 speculate{position} 1778 2000 88.9 speculate{bigram} 1597 2000 79.8"},{"location":"winning/","title":"Winning","text":""},{"location":"winning/#workflow","title":"Workflow","text":"<p>The original purpose for <code>qordle</code> was to solve the daily wordle puzzle faster than my family. The <code>qordle</code> suggest command will quickly perform a ranking of the best next guesses. I wrote a simple shell script to facilitate using two different strategy combinations and <code>jq</code> to show only the top ten words.</p> qordle-suggest<pre><code>#!/usr/bin/env zsh\nset -eo pipefail\n\nstrategies=(\n# '-s freq'\n# '-s pos'\n# '-s bigram'\n'-s freq -s pos'\n# '-s freq -s bigram'\n'-s freq -s pos -s bigram'\n)\nfor strategy in ${strategies}\ndo\neval \"qordle suggest $strategy -S \"$@\"\" |\njq --arg strategy $strategy '{strategy:$strategy, words:.[:10]}'\ndone\n</code></pre> <p>An example session of a few guesses might follow the below pattern.</p> qordle suggest session<pre><code>$ qordle-suggest t.a.res g.r.ain m.o.l.a.r\n{\n\"strategy\": \"-s freq -s pos\",\n  \"words\": [\n\"flora\"\n]\n}\n{\n\"strategy\": \"-s freq -s pos -s bigram\",\n  \"words\": [\n\"flora\"\n]\n}\n</code></pre> <p>To see how <code>qordle</code> might have played a word using different strategies, use the play command. The following is a short script I use to abbreviate the results.</p> qordle-play<pre><code>#!/usr/bin/env zsh\nset -eo pipefail\n\nqordle play -s frequency -s position -S \"$@\" |\njq -s 'map({secret:.secret, words:(.rounds|last|.words)})'\n</code></pre> <p>If no starting word is provided, <code>qordle</code> will automatically find the optimal starting word for the specified strategies. In this case it ranked tares best.</p> play with freq and pos strategies<pre><code>$ qordle-play under\n[\n{\n\"secret\": \"under\",\n    \"words\": [\n\"tares\",\n      \"cider\",\n      \"older\",\n      \"under\"\n]\n}\n]\n</code></pre> <p>Chaining the bigram strategy would have resulted in a faster path to the solution.</p> play with freq, pos, and bigram strategies<pre><code>qordle play -s freq -s pos -s b -S under | jq -s 'map({secret:.secret, words:(.rounds|last|.words)})'\n[\n{\n\"secret\": \"under\",\n    \"words\": [\n\"rates\",\n      \"diner\",\n      \"under\"\n]\n}\n]\n</code></pre>"},{"location":"commands/_qordle/","title":"qordle","text":""},{"location":"commands/_qordle/#input-patterns","title":"Input Patterns","text":"<p>Many of the commands take an input pattern as feedback from guessing a word.</p> <ul> <li>Miss      \u2192 a lower case letter (eg \"local\")</li> <li>Misplaced \u2192 a lower case letter proceeded by a '.' (eg \"l.ocal\")</li> <li>Exact     \u2192 an upper case letter (eg \"LOcal\")</li> </ul>"},{"location":"commands/ranks/","title":"Ranks","text":"<p>Sum all the percentages for letters in position 2</p> <pre><code>$ qordle ranks | jq '.positions | flatten | map(.\"2\") | add'\n1\n</code></pre> <p>Compute the score for the words</p> <pre><code>$ qordle ranks brown | jq .words\n{\n\"brown\": {\n\"bigrams\": {\n\"ranks\": {\n\"br\": 0.0022,\n            \"ow\": 0.0014,\n            \"ro\": 0.0112,\n            \"wn\": 0.0002\n        },\n        \"total\": 0.0750\n        },\n        \"frequencies\": {\n\"ranks\": {\n\"0\": 0.0183,\n            \"1\": 0.0704,\n            \"2\": 0.072,\n            \"3\": 0.0065,\n            \"4\": 0.0718\n        },\n        \"total\": 0.2390\n        },\n        \"positions\": {\n\"ranks\": {\n\"0\": 0.07,\n            \"1\": 0.0685,\n            \"2\": 0.0637,\n            \"3\": 0.0133,\n            \"4\": 0.0581\n        },\n        \"total\": 0.2736\n        }\n}\n}\n</code></pre>"},{"location":"commands/suggest/","title":"Suggest","text":"<p>This command uses the specified strategies and any information about prior guesses to sort the remaining words.</p> <pre><code>$ qordle suggest -s freq -s pos -S .rais.e to.nER | jq\n[\n\"neper\",\n  \"nuder\",\n  \"never\",\n  \"ender\",\n  \"under\",\n  \"newer\"\n]\n</code></pre> <pre><code>$ qordle suggest -s bigram .rais.e to.nER | jq\n[\n\"neper\",\n  \"nuder\",\n  \"never\",\n  \"ender\",\n  \"under\",\n  \"newer\"\n]\n</code></pre>"},{"location":"commands/validate/","title":"Validate","text":"<p>This command is useful for understanding why a guess was rejected against the secret. The <code>--debug</code> flag is your friend as it will show the first reason for a word to be rejected.</p> <pre><code>$ qordle --debug validate brown local\n2023-04-10T08:01:42+02:00 DBG compile pattern=[^loca][^loca][^loca][^loca][^loca] required={}\n2023-04-10T08:01:42+02:00 DBG filter found=o i=2 reason=invalid word=brown\n{\n\"guess\": \"brown\",\n    \"ok\": false,\n    \"secrets\": [\n\"local\"\n]\n}\n</code></pre>"},{"location":"commands/wordlists/","title":"Wordlists","text":"List all available wordlists<pre><code>$ qordle wordlists | jq\n[\n\"possible\",\n  \"qordle\",\n  \"solutions\"\n]\n</code></pre>"}]}